{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","firebase/firebaseConfig.js","routers/PrivateRoute.js","routers/PublicRoute.js","hooks/useForm.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","PrivateRoute","isAuthenticated","Component","component","rest","console","log","props","to","PublicRoute","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","setError","err","removeError","finishLoading","loadNotes","a","collection","get","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","message","logout","LoginScreen","useDispatch","useSelector","formValues","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","params","signInWithPopup","src","alt","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","display","files","dipatch","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.65aa3d4d.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes:[action.payload, ...state.notes]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete: \r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n            \r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                active:null,\r\n                notes: [],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n \r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers( applyMiddleware(thunk) )\r\n);","import { types } from \"../types/types\";\r\n \r\nexport const authReducer = ( state = {}, action ) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n // Your web app's Firebase configuration\r\n const firebaseConfig = {\r\n    apiKey: \"AIzaSyDJGDCFeCij-N6Rcg4UJdu8nhfMdADUYH8\",\r\n    authDomain: \"curso-react-d9c9b.firebaseapp.com\",\r\n    databaseURL: \"https://curso-react-d9c9b.firebaseio.com\",\r\n    projectId: \"curso-react-d9c9b\",\r\n    storageBucket: \"curso-react-d9c9b.appspot.com\",\r\n    messagingSenderId: \"969499222651\",\r\n    appId: \"1:969499222651:web:c4fb5f3bcd99dcf99138de\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    console.log(isAuthenticated);\r\n   \r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/auth/login\" />\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                (isAuthenticated )\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component { ...props } />\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues(newFormState);\r\n    }\r\n    \r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n        \r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\nexport const loadNotes = async (uid) => { \r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    console.log(notes);\r\n    return notes;\r\n}\r\n","export const fileUpload = async (file) => {\r\n    \r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dswhxollr/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n","import { db } from \"../firebase/firebaseConfig\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n        \r\n        dispatch( activeNote(doc.id, newNote) );\r\n        dispatch( addNewNote(doc.id, newNote) );\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes(notes) ) ;\r\n    }\r\n}\r\n\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n        \r\n        dispatch( refreshNote(note.id, noteToFirestore) );\r\n\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dipatch, getState) => {\r\n        const {active: activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick : false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n\r\n        activeNote.url = fileUrl;\r\n     \r\n        dipatch( startSaveNote ( activeNote ) );\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid; \r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type : types.notesDelete,\r\n    payload: id   \r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n\r\n\r\n\r\n\r\n","import {firebase, googleAuthProvider} from '../firebase/firebaseConfig';\r\nimport { types } from \"../types/types\" \r\nimport { startLoading, finishLoading } from './ui'; \r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from './notes';\r\n   \r\nexport const startLoginEmailPassword = ( email, password ) => { \r\n    return ( dispatch ) => { \r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(async ({user}) => { \r\n                dispatch( finishLoading() );\r\n                dispatch( login( user.uid, user.displayName) );\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                console.log(user);\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                )\r\n            } )\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async ({ user }) => {\r\n\r\n                await user.updateProfile({displayName: name});\r\n                console.log(user);\r\n\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\n \r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => ({\r\n    type:types.logout\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\nimport validator from 'validator'\r\nimport { setError, removeError } from '../../actions/ui'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError, loading } = useSelector( state => state.ui);\r\n \r\n\r\n    const [formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault(); \r\n        if ( isFormValid() ) {\r\n            dispatch( startLoginEmailPassword( email, password ));\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = (params) => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const isFormValid = () => {\r\n \r\n         if ( !validator.isEmail( email ) ) { \r\n          dispatch( setError('Email is not value') );\r\n          return false;\r\n        } else if ( password.length < 5) { \r\n          dispatch( setError('Password should be at least 6 characters and match each other') );\r\n          return false;\r\n        } \r\n          dispatch( removeError() );\r\n        return true;\r\n      }\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            {\r\n                msgError &&\r\n                    (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                    )\r\n            }\r\n\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animate__faster\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n              \r\n                <div className=\"auth__social-networks\" >\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                        Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from \"validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setError, removeError } from \"../../actions/ui\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { msgError } = useSelector( state => state.ui);\r\n\r\n  console.log(msgError);\r\n  \r\n  const [formValues, handleInputChange] = useForm({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name ,email ,password ,password2 } = formValues;\r\n\r\n  const handleRegister  = (e) => {\r\n    e.preventDefault();\r\n    if ( isFormValid() ) {\r\n      dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n    } \r\n  }\r\n\r\n  const isFormValid = () => {\r\n\r\n    if ( name.trim().length === 0 ) { \r\n      dispatch( setError('name is required') );\r\n      return false;\r\n    } else if ( !validator.isEmail( email ) ) { \r\n      dispatch( setError('Email is not value') );\r\n      return false;\r\n    } else if ( password !== password2 || password.length < 5) { \r\n      dispatch( setError('Password should be at least 6 characters and match each other') );\r\n      return false;\r\n    } \r\n      dispatch( removeError() );\r\n    return true;\r\n  }\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n\r\n      <form onSubmit={handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n        {\r\n          msgError &&\r\n            (\r\n              <div className=\"auth__alert-error\">\r\n                { msgError }\r\n              </div>\r\n            )\r\n        }\r\n          \r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          onChange={ handleInputChange }\r\n          value={ name }\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          onChange={ handleInputChange }\r\n          value={ email }\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          onChange={ handleInputChange }\r\n          value={ password } \r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm password\"\r\n          name=\"password2\"\r\n          className=\"auth__input\"\r\n          onChange={ handleInputChange }\r\n          value={ password2 } \r\n        />\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\r\n          Register\r\n        </button>\r\n\r\n        <Link to=\"/auth/login\" className=\"link\">\r\n          Already registered?\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n    const noteDate = moment(date);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote(id, {date,title,body,url} ) );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n\r\n            }\r\n             \r\n            \r\n            <div className=\"journal__entry-body\">\r\n                 <p className=\"journal__entry-title\">\r\n                     { title } \r\n                 </p>\r\n                 <p className=\"journal__entry-content\">\r\n                     { body }\r\n                 </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> {noteDate.format('dddd')} </span>\r\n                <h4> {noteDate.format('Do')} </h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n  \r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        {...note}\r\n                    \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n \r\n            </div>\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                    <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                    <p className=\"mt-5\">\r\n                        New entry\r\n                    </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display:'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= { handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {active: note} = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const {body, title} = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) { \r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n        \r\n    }, [formValues, dispatch])  \r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(note.id) );\r\n    }\r\n    \r\n  \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    name=\"body\"\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                >\r\n                    \r\n                </textarea>\r\n\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                \r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar' \r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n        \r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, \r\n    Redirect\r\n } from \"react-router-dom\";\r\nimport { firebase } from '../firebase/firebaseConfig'\r\nimport { useDispatch } from 'react-redux';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n            if (user?.uid) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes(user.uid) );\r\n                \r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\" \r\n                        component={AuthRouter} \r\n                        isAuthenticated={isLoggedIn} \r\n                    \r\n                    />\r\n                    <PrivateRoute \r\n                        exact path=\"/\" \r\n                        component={JournalScreen}  \r\n                        isAuthenticated={isLoggedIn} \r\n                    /> \r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}